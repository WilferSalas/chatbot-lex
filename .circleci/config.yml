jobs:
  install:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/react-chat
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Installing dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ~/react-chat
          paths:
            - node_modules

  build:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/react-chat
    steps:
      - checkout
      - attach_workspace:
          at: ~/react-chat
      - run:
          name: Build application
          command: npm run build
      - persist_to_workspace:
          root: ~/react-chat
          paths:
            - build

  test:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/react-chat
    steps:
      - checkout
      - attach_workspace:
          at: ~/react-chat
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

  deploy:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Installing AWS CLI
          command: |
            sudo apt-get update
            sudo apt install python3-pip
            sudo pip3 install awsebcli --upgrade
      - run: npm install && npm run build
      - run: aws s3 sync build s3://chatbot-lex-bucket

workflows:
  version: 2
  execute_bulk:
    jobs:
      - install
      - build:
          requires:
            - install
      - test:
          requires:
            - build
      - hold: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when test2 has succeeded
           - test
      - test_dev:
          filters:  # using regex filters requires the entire branch to match
            branches:
              only:  # only branches matching the below regex filters will run
                - dev
                - /user-.*/
      - test_stage:
          filters:
            branches:
              only: stage
      - test_pre-prod:
          filters:
            branches:
              only: /pre-prod(?:-.+)?$/
      - deploy:
          requires:
            - hold